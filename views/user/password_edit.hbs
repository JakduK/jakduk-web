<div class="wrapper" ng-controller="writeCtrl">

  {{> header_navigation}}

  <!--=== Breadcrumbs ===-->
  <div class="breadcrumbs">
    <div class="container">
      <h1 class="pull-left"><a href="/user/profile">{{TRANSLATION "user.password.change"}}</a></h1>
    </div><!--/container-->
  </div><!--/breadcrumbs-->
  <!--=== End Breadcrumbs ===-->

  <!--=== Content Part ===-->
  <div class="container content">

    <form name="userPasswordUpdate" class="form-horizontal" ng-submit="onSubmit($event)">

      <div class="form-group has-feedback" ng-class="{'has-success':userPasswordUpdate.oldPassword.$valid, 'has-error':userPasswordUpdate.oldPassword.$invalid}">
        <label class="col-sm-2 control-label">
          <abbr title='{{TRANSLATION "common.msg.required"}}'>*</abbr>
          {{TRANSLATION "user.password.old"}}
        </label>
        <div class="col-sm-3">
          <input type="password" name="oldPassword" class="form-control" placeholder='{{TRANSLATION "user.placeholder.old.password"}}' ng-model="oldPassword" ng-blur="checkOldPassword()" ng-required="true" ng-minlength="passwordLengthMin" ng-maxlength="passwordLengthMax">
          <span class="glyphicon form-control-feedback" ng-class="{'glyphicon-ok':userPasswordUpdate.oldPassword.$valid,'glyphicon-remove':userPasswordUpdate.oldPassword.$invalid}"></span>
          <span ng-class="oldPasswordAlert.classType" ng-show="oldPasswordAlert.msg" ng-bind="oldPasswordAlert.msg"></span>
        </div>
      </div>

      <div class="form-group has-feedback" ng-class="{'has-success':userPasswordUpdate.newPassword.$valid, 'has-error':userPasswordUpdate.newPassword.$invalid}">
        <label class="col-sm-2 control-label">
          <abbr title='{{TRANSLATION "common.msg.required"}}'>*</abbr>
          {{TRANSLATION "user.password.new"}}
        </label>
        <div class="col-sm-3">
          <input type="password" name="newPassword" class="form-control" placeholder='{{TRANSLATION "user.placeholder.new.password"}}'
            ng-model="newPassword" ng-blur="checkNewPassword()" ng-required="true"
            ng-minlength="passwordLengthMin" ng-maxlength="passwordLengthMax"/>

          <span class="glyphicon form-control-feedback" ng-class="{'glyphicon-ok':userPasswordUpdate.newPassword.$valid,'glyphicon-remove':userPasswordUpdate.newPassword.$invalid}"></span>
          <span ng-class="newPasswordAlert.classType" ng-show="newPasswordAlert.msg" ng-bind="newPasswordAlert.msg"></span>
        </div>
      </div>

      <div class="form-group has-feedback" ng-class="{'has-success':userPasswordUpdate.newPasswordConfirm.$valid, 'has-error':userPasswordUpdate.newPasswordConfirm.$invalid || newPasswordConfirm.length > 0 && newPassword != newPasswordConfirm}">
        <label class="col-sm-2 control-label">
          <abbr title='{{TRANSLATION "common.msg.required"}}'>*</abbr>
          {{TRANSLATION "user.password.new.confirm"}}
        </label>
        <div class="col-sm-3">
          <input type="password" name="newPasswordConfirm" class="form-control" placeholder='{{TRANSLATION "user.placeholder.confirm.new.password"}}' ng-model="newPasswordConfirm" ng-blur="checkNewPasswordConfirm()" ng-required="true" ng-minlength="passwordLengthMin" ng-maxlength="passwordLengthMax">

          <span class="glyphicon form-control-feedback" ng-class="{'glyphicon-ok':userPasswordUpdate.newPasswordConfirm.$valid,'glyphicon-remove':userPasswordUpdate.newPasswordConfirm.$invalid || newPasswordConfirm.length > 0 && newPassword != newPasswordConfirm}"></span>
          <span ng-class="newPasswordConfirmAlert.classType" ng-show="newPasswordConfirmAlert.msg" ng-bind="newPasswordConfirmAlert.msg"></span>
        </div>
      </div>

      <div class="form-group">
        <div class="col-sm-offset-2 col-sm-4">
          <button type="submit" class="btn btn-success">
            <span class="glyphicon glyphicon-upload"></span> {{TRANSLATION "common.button.write"}}
          </button>
          <button type="button" class="btn btn-warning" onclick="location.href='/user/profile'">
            <span class="glyphicon glyphicon-ban-circle"></span> {{TRANSLATION "common.button.cancel"}}
          </button>
          <div>
            <i class="fa fa-circle-o-notch fa-spin" ng-show="submitConn == 'connecting'"></i>
            <span ngclass="buttonAlert.classType" ng-show="buttonAlert.msg" ng-bind="buttonAlert.msg"></span>
          </div>
        </div>
      </div>

    </form>

  </div> <!--=== End Content Part ===-->

  {{> footer}}

</div><!-- /.container -->

<script src="/bower_components/jquery/dist/jquery.js"></script>
<script src="/bower_components/bootstrap/dist/js/bootstrap.js"></script>>
<script src="/unify/assets/plugins/back-to-top.js"></script>
<script src="/unify/assets/plugins/smoothScroll.js"></script>
<script src="/unify/assets/plugins/scrollbar/js/jquery.mCustomScrollbar.concat.min.js"></script>
<script src="/unify/assets/js/app.js"></script>
<script src="/bower_components/angular/angular.js"></script>
<script src="/jakduk/js/jakduk.js"></script>

<script src="/bower_components/angular-i18n/angular-locale_{{locale}}.js"></script>

<script type="text/javascript">
  angular.module("jakdukApp", [
    'jakdukCommon'
  ]).controller("writeCtrl", ['$scope', '$window', '$http', function ($scope, $window, $http) {
    $scope.passwordLengthMin = Jakduk.FormPasswordLengthMin;
    $scope.passwordLengthMax = Jakduk.FormPasswordLengthMax;
    $scope.oldPasswordAlert = {};
    $scope.newPasswordAlert = {};
    $scope.newPasswordConfirmAlert = {};

    $window.onbeforeunload = function (e) {
      if ($scope.submitConn !== 'connecting' && !$scope.userPasswordUpdate.$pristine) {
        (e || $window.event).returnValue = '{{TRANSLATION "common.msg.are.you.sure.leave.page"}}';
        return '{{TRANSLATION "common.msg.are.you.sure.leave.page"}}';
      }
    };

    $scope.onSubmit = function (event) {
      if ($scope.userPasswordUpdate.$valid && $scope.newPassword === $scope.newPasswordConfirm) {
        $scope.submitConn = "connecting";
        $scope.buttonAlert = {
          classType: "text-info",
          msg: '{{TRANSLATION "common.msg.be.cummunicating.server"}}'
        };

        $http.put('{{apiServerUrl}}/user/password', {
          newPassword: $scope.newPassword,
          newPasswordConfirm: $scope.newPasswordConfirm,
          password: $scope.oldPassword
        }).then(function () {
          $window.location = '/user/profile';
        }, function (response) {
          $scope.submitConn = 'none';
          $scope.buttonAlert = {
            classType: 'text-info',
            msg: response.data.message
          };
        });
      } else {
        $scope.checkOldPassword();
        $scope.checkNewPassword();
        $scope.checkNewPasswordConfirm();

        $scope.submitConn = "none";
        $scope.buttonAlert = {
          classType: "text-info",
          msg: '{{TRANSLATION "common.msg.need.form.validation"}}'
        };
      }
    };

    $scope.checkOldPassword = function () {
      if ($scope.userPasswordUpdate.oldPassword.$invalid) {
        if ($scope.userPasswordUpdate.oldPassword.$error.required) {
          $scope.oldPasswordAlert = {
            classType: "text-info",
            msg: '{{TRANSLATION "common.msg.required"}}'
          };
        } else if ($scope.userPasswordUpdate.oldPassword.$error.minlength || $scope.userPasswordUpdate.oldPassword.$error.maxlength) {
          $scope.oldPasswordAlert = {
            classType: "text-info",
            msg: '{{TRANSLATION "Size.userWrite.password"}}'
          };
        }
      } else {
        $scope.oldPasswordAlert = {};
      }
    };

    $scope.checkNewPassword = function () {
      if ($scope.userPasswordUpdate.newPassword.$invalid) {
        if ($scope.userPasswordUpdate.newPassword.$error.required) {
          $scope.newPasswordAlert = {
            classType: "text-info",
            msg: '{{TRANSLATION "common.msg.required"}}'
          };
        } else if ($scope.userPasswordUpdate.newPassword.$error.minlength || $scope.userPasswordUpdate.newPassword.$error.maxlength) {
          $scope.newPasswordAlert = {
            classType: "text-info",
            msg: '{{TRANSLATION "Size.userWrite.password"}}'
          };
        }
      } else {
        $scope.newPasswordAlert = {};
      }
    };

    $scope.checkNewPasswordConfirm = function () {
      if ($scope.userPasswordUpdate.newPasswordConfirm.$invalid || $scope.newPassword != $scope.newPasswordConfirm) {
        if ($scope.userPasswordUpdate.newPasswordConfirm.$error.required) {
          $scope.newPasswordConfirmAlert = {
            classType: "text-info",
            msg: '{{TRANSLATION "common.msg.required"}}'
          };
        } else if ($scope.userPasswordUpdate.newPasswordConfirm.$error.minlength || $scope.userPasswordUpdate.newPasswordConfirm.$error.maxlength) {
          $scope.newPasswordConfirmAlert = {
            classType: "text-info",
            msg: '{{TRANSLATION "Size.userWrite.password"}}'
          };
        } else if ($scope.newPassword != $scope.newPasswordConfirm) {
          $scope.newPasswordConfirmAlert = {
            classType: "text-info",
            msg: '{{TRANSLATION "user.msg.password.mismatch"}}'
          };
        }
      } else {
        $scope.newPasswordConfirmAlert = {};
      }
    };
  }]);

  $(document).ready(function () {
    App.init();
  });
</script>
