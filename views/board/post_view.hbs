<div class="wrapper">

  {{> header_navigation}}

	<!--=== Breadcrumbs ===-->
	<div class="breadcrumbs">
		<div class="container">
			<h1 class="pull-left">
				<a href="/board/free/refresh">{{TRANSLATION "board.name.free"}}</a></h1>
			<ul class="pull-right breadcrumb">
				<li><a href="/board/free/posts">{{TRANSLATION "board.free.breadcrumbs.posts"}}</a>
				</li>
				<li>
					<a href="/board/free/comments">{{TRANSLATION "board.free.breadcrumbs.comments"}}</a>
				</li>
			</ul>
		</div><!--/container-->
	</div><!--/breadcrumbs-->
	<!--=== End Breadcrumbs ===-->

	<!--=== Content Part ===-->
	<div class="container content blog-page blog-item" ng-controller="boardFreeCtrl">

		<!-- Buttons -->
		<div class="margin-bottom-10">
			<button type="button" class="btn-u btn-brd rounded" ng-click="backToList()" tooltip-popup-close-delay="300" uib-tooltip="{{TRANSLATION "board.list"}}">
				<i class="fa fa-list"></i>
			</button>

    {{#if prevPost}}
      <button type="button" class="btn-u btn-brd rounded" ng-click="prevPost()"
        tooltip-popup-close-delay="300" uib-tooltip="{{TRANSLATION "common.button.prev"}}">
        <i class="fa fa-chevron-left"></i>
      </button>
    {{else}}
      <button type="button" class="btn-u btn-brd rounded btn-u-default disabled" disabled="disabled">
        <i class="fa fa-chevron-left text-muted"></i>
      </button>
    {{/if}}

    {{#if nextPost}}
      <button type="button" class="btn-u btn-brd rounded" ng-click="nextPost()"
        tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION  "common.button.next"}}">
        <i class="fa fa-chevron-right"></i>
      </button>
    {{else}}
      <button type="button" class="btn-u btn-brd rounded btn-u-default disabled" disabled="disabled">
        <i class="fa fa-chevron-right text-muted"></i>
      </button>
    {{/if}}

    {{#if (OPR '&&' isAuthenticated (EQ userInfo.id post.writer.userId))}}
      <button type="button" class="btn-u rounded" ng-click="confirmEdit();">
        <i class="fa fa-pencil-square-o"></i>{{TRANSLATION "common.button.edit"}}
      </button>
      <button type="button" class="btn-u btn-u-default rounded" ng-click="confirmDelete();">
        <i class="fa fa-trash-o"></i>{{TRANSLATION "common.button.delete"}}
      </button>
    {{/if}}

    {{#if (OPR '&&' isAdmin (NOT_EQ post.status.notice 'DELETE'))}}
      {{#if (EQ post.status.notice 'NOTICE')}}
        <button type="button" class="btn-u btn-u-default rounded" onclick="location.href='/board/notice/cancel/{{post.seq}}'">
          {{TRANSLATION "common.button.cancel.notice"}}
        </button>
      {{else}}
        <button type="button" class="btn-u rounded" onclick="location.href='/board/notice/set/{{post.seq}}'">
          {{TRANSLATION "common.button.set.as.notice"}}
        </button>
      {{/if}}
    {{/if}}
		</div> <!-- End Buttons -->

  {{#if (EQ result 'setNotice')}}
    <div class="contex-bg"><p class="bg-success rounded">{{TRANSLATION "board.msg.set.as.notice"}}</p></div>
  {{else if (EQ result 'cancelNotice')}}
    <div class="contex-bg"><p class="bg-success rounded">{{TRANSLATION "board.msg.cancel.notice"}}</p></div>
  {{else if (EQ result 'alreadyNotice')}}
    <div class="contex-bg"><p class="bg-danger rounded">{{TRANSLATION "board.msg.error.already.notice"}}</p></div>
  {{else if (EQ result 'alreadyNotNotice')}}
    <div class="contex-bg"><p class="bg-danger rounded">{{TRANSLATION "board.msg.error.already.not.notice"}}</p></div>
  {{else if (EQ result 'existComment')}}
    <div class="contex-bg"><p class="bg-danger rounded">{{TRANSLATION "board.msg.error.can.not.delete.post"}}</p></div>
  {{else if (EQ result 'emptyComment')}}
    <div class="contex-bg"><p class="bg-danger rounded">{{TRANSLATION "board.msg.error.can.not.delete.post.except.comment"}}</p></div>
  {{/if}}

		<!--Blog Post-->
		<div class="blog margin-bottom-20">
			<input type="hidden" id="subject" value="{{post.subject}}">
			<h2>
				<small>
					{{#if (EQ post.status.device 'MOBILE')}}<span aria-hidden="true" class=" icon-screen-smartphone"></span>{{/if}}
          {{#if (EQ post.status.device 'TABLET')}}<span aria-hidden="true" class=" icon-screen-tablet"></span>{{/if}}
          {{#if galleries}}<span aria-hidden="true" class="icon-picture"></span>{{/if}}
				</small>
      {{#if (EQ post.status.delete 'DELETE')}}
        {{TRANSLATION "board.msg.deleted"}}
      {{else}}
        {{post.subject}}
      {{/if}}
      {{#if post.category}}
        <small><span aria-hidden="true" class="icon-directions"></span> {{CATEGORY_NAME post.category locale}}</small>
      {{/if}}
			</h2>
			<div class="blog-post-tags">
				<ul class="list-unstyled list-inline blog-info">
					<li><span aria-hidden="true" class="icon-user"></span> {{post.writer.username}}</li>
					<li ng-bind="'{{post.id}}' | dateFromObjectId | date:'medium'"></li>
					<li><span aria-hidden="true" class="icon-eye"></span> {{post.views}}</li>
				</ul>
			</div>

      {{#if (EQ post.status.delete 'DELETE')}}
        <p>{{TRANSLATION "board.msg.deleted"}}</p>
      {{else}}
        <p>{{{post.content}}}</p>
      {{/if}}

			<!-- galleries -->
			{{#if post.galleries}}
				<ul class="list-group">
					<li class="list-group-item">
						<strong>{{TRANSLATION "board.gallery.list"}}</strong>
						{{#each post.galleries}}
							<div>
								<span aria-hidden="true" class="icon-paper-clip"></span>
								<a href="/gallery/view/{{id}}">{{name}}</a> | {{SIZE_FORMAT size}}
							</div>
            {{/each}}
					</li>
				</ul>
      {{/if}}

			<!-- buttons -->
			<div class="ladda-btn margin-bottom-10">
				<div class="row">
					<div class="col-xs-6">
						<button type="button" class="btn-u btn-u-sm btn-u-blue rounded ladda-button"
							ng-click="btnFeeling('LIKE')" ng-init="numberOfLike={{ARRAY_SIZE post.usersLiking}}"
							ladda="btnLike" data-style="expand-right" data-spinner-color="Gainsboro"
							tooltip-popup-close-delay="300" uib-tooltip="{{TRANSLATION "common.button.like"}}">
							<i class="fa fa-thumbs-o-up fa-lg"></i>
							<span ng-hide="likeConn == 'connecting'" ng-bind="numberOfLike"></span>
						</button>
						<button type="button" class="btn-u btn-u-sm btn-u-red rounded ladda-button"
							ng-click="btnFeeling('DISLIKE')" ng-init="numberOfDislike={{ARRAY_SIZE post.usersDisliking}}"
							ladda="btnDislike" data-style="expand-right" data-spinner-color="Gainsboro"
							tooltip-popup-close-delay='300' uib-tooltip='{{TRANSLATION "common.button.dislike"}}'>
							<i class="fa fa-thumbs-o-down fa-lg"></i>
							<span ng-hide="dislikeConn == 'connecting'" ng-bind="numberOfDislike"></span>
						</button>
					</div>
					<div class="col-xs-6 text-right">
						<button class="btn btn-u-sm rounded btn-android" type="button" ng-click="btnUrlCopy()"
							tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "common.msg.copy.to.clipboard"}}">
							<i class="icon-link"></i>
						</button>
						<a id="kakao-link-btn" href="javascript:void(0);"
							tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "common.msg.send.to.kakao"}}">
							<img src="/kakao/icon/kakaolink_btn_small.png">
						</a>
					</div>
				</div>
			</div>

			<div class="alert fade in rounded ng-cloak" ng-class="alert.classType" ng-show="alert.msg">
				<span ng-bind="alert.msg"></span>
				<a class="alert-link" ng-href="{%alert.linkUrl%}" ng-show="alert.linkUrl" ng-bind="alert.linkLabel"></a>
			</div>

		</div> <!--End Blog Post-->

		<hr class="padding-10"/>

		<!-- comment -->
		<div ng-controller="commentCtrl">
			<!-- 댓글 목록  -->
			<div class="media margin-bottom-10">

				<h2 class="heading-sm text-primary">
					<i class="fa fa-comments"></i>
					<span infinite-scroll="initComment()" infinite-scroll-disabled="infiniteDisabled">
            {{{TRANSLATION "board.msg.comment.count" n='<span ng-bind="commentCount"></span>'}}}
					</span>
					<button type="button" class="btn btn-link" ng-click="btnRefreshComment()" tooltip-popup-close-delay="300" uib-tooltip="{{TRANSLATION "common.button.refresh.comments"}}">
						<i class="fa fa-refresh text-muted" ng-class="{'fa-spin':loadCommentConn == 'connecting'}"></i>
					</button>
				</h2>

				<div class="media-body ng-cloak">
					<div ng-repeat="comment in comments">
						<h6 class="clearfix">
							<i aria-hidden="true" class="icon-user"></i>
							<span ng-bind="comment.writer.username"></span>
							<span class="pull-right" ng-bind="comment.id | dateFromObjectId | date:'medium'"></span>
						</h6>
						<p>
							<span aria-hidden="true" class="icon-screen-smartphone" ng-if="comment.status.device === 'MOBILE'"></span>
							<span aria-hidden="true" class="icon-screen-tablet" ng-if="comment.status.device === 'TABLET'"></span>
							<span ng-bind-html="comment.content"></span>
						</p>

						<button type="button" class="btn btn-xs rounded btn-dropbox" ng-click="btnCommentFeeling(comment.id, 'LIKE')" tooltip-popup-close-delay="300" uib-tooltip="{{TRANSLATION "common.button.like"}}">
							<span ng-init="numberOfCommentLike[comment.id]=comment.usersLiking.length">
								<i class="fa fa-thumbs-o-up fa-lg"></i>
								<span ng-bind="numberOfCommentLike[comment.id]"></span>
							</span>
						</button>
						<button type="button" class="btn btn-xs rounded btn-weibo" ng-click="btnCommentFeeling(comment.id, 'DISLIKE')" tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "common.button.dislike"}}">
							<span ng-init="numberOfCommentDislike[comment.id]=comment.usersDisliking.length">
								<i class="fa fa-thumbs-o-down fa-lg"></i>
								<span ng-bind="numberOfCommentDislike[comment.id]"></span>
							</span>
						</button>
						<div class="text-danger" ng-show="commentFeelingConn[comment.id]" ng-bind="commentFeelingAlert[comment.id]"></div>
						<hr class="padding-5">
					</div>

					<div class="margin-bottom-10" ng-show="commentCount || commentAlert.msg">
						<button type="button" class="btn-u btn-brd rounded btn-block btn-u-dark" ng-click="btnMoreComment()" ng-show="commentCount">
              {{TRANSLATION "common.button.more.comments"}} <i class="fa fa-angle-down"></i>
							<i class="fa fa-circle-o-notch fa-spin" ng-show="loadCommentConn === 'connecting'"></i>
						</button>
					</div>

					<div class="contex-bg" ng-show="commentAlert.msg">
						<p class="commentAlert.classType rounded" ng-bind="commentAlert.msg"></p>
					</div>
				</div>
			</div>

			<!-- 댓글 남기기 -->
			<div class="post-comment">
				<h4 class="text-primary">{{TRANSLATION "board.comment.leave.comment"}}</h4>
				<div class="margin-bottom-10">
					<summernote config="options" on-keyUp="focus(evt)" ng-model="summernote.contents" ng-init="summernote={contents:'', seq:'{{post.seq}}'}"></summernote>
					<span ng-class="summernoteAlert.classType" ng-show="summernoteAlert.msg" ng-bind="summernoteAlert.msg"></span>
				</div>

				<div class="margin-bottom-10">
        {{#if (NOT isAuthenticated)}}
          <button type="button" class="btn-u btn-brd rounded btn-u-default disabled" disabled="disabled">
            <span aria-hidden="true" class="icon-pencil"></span>
            {{TRANSLATION "common.button.write.comment"}}
          </button>
        {{else if (NOT isAdmin)}}
          <button type="button" class="btn-u btn-brd rounded btn-u-sm ladda-button" ng-click="btnWriteComment()" ladda="writeComment" data-style="expand-right" data-spinner-color="Gainsboro">
            <span aria-hidden="true" class="icon-pencil"></span>
            {{TRANSLATION "common.button.write.comment"}}
          </button>
        {{/if}}
					<span ng-bind="summernote.contents.length"></span> / <span ng-bind="boardCommentContentLengthMax"></span>
				</div>
				<p ng-show="writeCommentAlert.msg" ng-class="writeCommentAlert.classType" ng-bind="writeCommentAlert.msg"></p>
			</div>

		</div> <!-- End Comment -->

		<!-- Buttons -->
		<div class="margin-bottom-10">
			<button type="button" class="btn-u btn-brd rounded" ng-click="backToList()" tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "board.list"}}">
				<i class="fa fa-list"></i>
			</button>

    {{#if prevPost}}
      <button type="button" class="btn-u btn-brd rounded" ng-click="prevPost()" tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "common.button.prev"}}">
        <i class="fa fa-chevron-left"></i>
      </button>
    {{else}}
      <button type="button" class="btn-u btn-brd rounded btn-u-default disabled" disabled="disabled">
        <i class="fa fa-chevron-left text-muted"></i>
      </button>
    {{/if}}

    {{#if nextPost}}
      <button type="button" class="btn-u btn-brd rounded" ng-click="nextPost()" tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "common.button.next"}}">
        <i class="fa fa-chevron-right"></i>
      </button>
    {{else}}
      <button type="button" class="btn-u btn-brd rounded btn-u-default disabled" disabled="disabled">
        <i class="fa fa-chevron-right text-muted"></i>
      </button>
    {{/if}}

    {{#if (OPR '&&' isAuthenticated (EQ userInfo.id post.writer.userId))}}
      <button type="button" class="btn-u rounded" ng-click="confirmEdit();">
        <i class="fa fa-pencil-square-o"></i>{{TRANSLATION "common.button.edit"}}
      </button>
      <button type="button" class="btn-u btn-u-default rounded" ng-click="confirmDelete();">
        <i class="fa fa-trash-o"></i>{{TRANSLATION "common.button.delete"}}
      </button>
    {{/if}}

    {{#if (OPR '&&' isAdmin (NOT_EQ post.status.delete 'DELETE'))}}
      {{#if (EQ post.status.notice 'NOTICE')}}
        <button type="button" class="btn-u btn-u-default rounded" onclick="location.href='/board/notice/cancel/{{post.seq}}'">
          {{TRANSLATION "common.button.cancel.notice"}}
        </button>
      {{else}}
        <button type="button" class="btn-u rounded" onclick="location.href='/board/notice/set/{{post.seq}}'">
          {{TRANSLATION "common.button.set.as.notice"}}
        </button>
      {{/if}}
    {{/if}}
		</div> <!-- End Buttons -->
	</div>  <!-- End Content Part -->

	{{> footer}}

</div> <!-- /.container -->

<script src="/bower_components/jquery/dist/jquery.js"></script>
<script src="/bower_components/bootstrap/dist/js/bootstrap.js"></script>
<script src="/bower_components/summernote/dist/summernote.js"></script>
<script src="/unify/assets/plugins/ladda-buttons/js/spin.min.js"></script>
<script src="/unify/assets/plugins/ladda-buttons/js/ladda.min.js"></script>
<script src="/unify/assets/plugins/back-to-top.js"></script>
<script src="/unify/assets/plugins/smoothScroll.js"></script>
<script src="/unify/assets/plugins/scrollbar/js/jquery.mCustomScrollbar.concat.min.js"></script>
<script src="/unify/assets/js/app.js"></script>
<script src="/kakao/js/kakao.min.js"></script>
<script src="/bower_components/angular/angular.js"></script>
<script src="/bower_components/angular-sanitize/angular-sanitize.js"></script>
<script src="/bower_components/angular-animate/angular-animate.js"></script>
<script src="/bower_components/angular-bootstrap/ui-bootstrap-tpls.js"></script>
<script src="/bower_components/angular-summernote/dist/angular-summernote.js"></script>
<script src="/bower_components/ng-infinite-scroller-origin/build/ng-infinite-scroll.js"></script>
<script src="/bower_components/angular-ladda/dist/angular-ladda.js"></script>
<script src="/jakduk/js/jakduk.js"></script>

<script src="/bower_components/angular-i18n/angular-locale_{{locale}}.js"></script>
<script src="/bower_components/summernote/lang/summernote-ko-KR.js"></script>

<script type="text/javascript">
	angular.module("jakdukApp", [
	  "summernote",
    "infinite-scroll",
    "ngSanitize",
    "angular-ladda",
    'ui.bootstrap',
    'jakdukCommon'
  ]).controller("boardFreeCtrl", ['$scope', '$http', '$window', '$location', function ($scope, $http, $window, $location) {
    $scope.alert = {};
    $scope.likeConn = "none";
    $scope.dislikeConn = "none";
    $scope.subject = document.getElementById("subject").value;

    // 글 감정 표현.
    $scope.btnFeeling = function (type) {
      if ({{NOT isAuthenticated}}) {
        $scope.alert.msg = '{{TRANSLATION "board.msg.need.login.for.feel"}}';
        $scope.alert.linkUrl = '/login';
        $scope.alert.linkLabel = '{{TRANSLATION "common.button.login"}}';
        $scope.alert.classType = "alert-warning";
        return;
      } else if ({{EQ userInfo.id post.writer.userId}}) {
        $scope.alert.msg = '{{TRANSLATION "board.msg.you.are.writer"}}';
        $scope.alert.classType = "alert-warning";
        return;
      }

      if ($scope.likeConn === "none" && $scope.dislikeConn === "none") {
        if (type === "LIKE") {
          $scope.likeConn = "connecting";
          $scope.btnLike = true;
        } else if (type == "DISLIKE") {
          $scope.dislikeConn = "connecting";
          $scope.btnDislike = true;
        }

        $http.post('{{apiServerUrl}}/board/free/{{post.seq}}/' + type).then(function (response) {
          var data = response.data;

          $scope.numberOfLike = data.numberOfLike;
          $scope.numberOfDislike = data.numberOfDislike;

          var message = "";

          if (data.feeling === 'LIKE') {
            message = '{{TRANSLATION "board.msg.select.like"}}';

            $scope.likeConn = "success";
            $scope.btnLike = false;
          } else if (data.feeling === 'DISLIKE') {
            message = "{{TRANSLATION 'board.msg.select.dislike'}}";

            $scope.dislikeConn = "success";
            $scope.btnDislike = false;
          }

          $scope.alert.msg = message;
          $scope.alert.classType = "alert-success";
        }, function (response) {
          var data = response.data;

          $scope.alert.msg = data.message;
          $scope.alert.classType = "alert-danger";

          if (type == "LIKE") {
            $scope.likeConn = "none";
            $scope.btnLike = false;
          } else if (type == "DISLIKE") {
            $scope.dislikeConn = "none";
            $scope.btnDislike = false;
          }
        });
      }
    };

    $scope.btnUrlCopy = function () {
      if ($window.clipboardData) {
        // IE처리
        // 클립보드에 문자열 복사
        $window.clipboardData.setData('text', $location.absUrl());
      } else {
        // 비IE 처리
        $window.prompt('{{TRANSLATION "common.msg.copy.to.clipboard"}}', $location.absUrl());
      }
    };

    $scope.backToList = function () {
      $window.location.href = '/board/free' + $window.location.search;
    };

    $scope.prevPost = function () {
      $window.location.href = '/board/free/' + {{prevPost.seq}} + '/' + $window.location.search;
    };

    $scope.nextPost = function () {
      $window.location.href = '/board/free/' + {{nextPost.seq}} + '/' + $window.location.search;
    };

    $scope.confirmDelete = function () {
      if ($scope.commentCount > 0) {
        if ($window.confirm('{{TRANSLATION "board.msg.confirm.delete.post.except.comment"}}')) {
          $window.location.href = '/board/free/delete/{{post.seq}}?type=postonly';
        }
      } else {
        if ($window.confirm('{{TRANSLATION "board.msg.confirm.delete.post"}}')) {
          $window.location.href = '/board/free/delete/{{post.seq}}?type=all';
        }
      }
    };

    $scope.confirmEdit = function () {
      if ($window.confirm('{{TRANSLATION "board.msg.confirm.edit.post"}}')) {
        $window.location.href = '/board/free/edit/{{post.seq}}';
      }
    };
  }]).controller("commentCtrl", function ($scope, $http) {
    $scope.boardCommentContentLengthMin = Jakduk.BoardCommentContentLengthMin;
    $scope.boardCommentContentLengthMax = Jakduk.BoardCommentContentLengthMax;

    $scope.comments = [];
    $scope.commentAlert = {};
    $scope.summernoteAlert = {};
    $scope.commentFeelingConn = {};
    $scope.commentFeelingAlert = {};
    $scope.numberOfCommentLike = {};
    $scope.numberOfCommentDislike = {};
    $scope.loadCommentConn = "none";
    $scope.writeCommentConn = "none";
    $scope.writeCommentAlert = {};
    $scope.infiniteDisabled = false;

    // summernote config
    $scope.options = {
      height: 0,
      lang: "${summernoteLang}",
      toolbar: [
        ['font', ['bold']],
        // ['fontsize', ['fontsize']], // Still buggy
        ['color', ['color']],
        ['insert', ['link']],
        ['help', ['help']]
      ]
    };

    $scope.focus = function (e) {
      if ({{NOT isAuthenticated}}) {
        if (window.confirm('{{TRANSLATION "board.msg.need.login.for.write"}}') == true) {
          location.href = '/login';
        }
      }
    };

    if ({{NOT isAuthenticated}}) {
      $scope.summernoteAlert = {
        "classType": "text-danger",
        "msg": '{{TRANSLATION "board.msg.need.login.for.write"}}'
      };
    }

    // 댓글 달기
    $scope.btnWriteComment = function () {
      if ($scope.summernote.contents.length < Jakduk.BoardCommentContentLengthMin
        || $scope.summernote.contents.length > Jakduk.BoardCommentContentLengthMax) {
        $scope.summernoteAlert = {
          "classType": "text-danger",
          "msg": '{{TRANSLATION "Size.board.comment.content"}}'
        };
        return;
      }

      if ($scope.writeCommentConn == "none") {
        $scope.writeCommentConn = "connecting";
        $scope.writeComment = true;

        $http.post('{{apiServerUrl}}/board/free/comment', $scope.summernote).then(function () {
          $scope.btnMoreComment();
          $scope.summernote.contents = "";
          $scope.commentAlert = {};
          $scope.summernoteAlert = {};
          $scope.writeCommentAlert = {};
          $scope.writeCommentConn = "none";
          $scope.writeComment = false;
        }, function (response) {
          var data = response.data;
          $scope.writeCommentAlert = {"classType":"text-danger", "msg":data.message};
          $scope.writeCommentConn = "none";
          $scope.writeComment = false;
        });
      }
    };

    // infinite 초기 설정
    $scope.initComment = function () {
      $scope.loadComments("init", "");
      $scope.infiniteDisabled = true;
    };

    // 댓글 목록 가져오기.
    $scope.loadComments = function (type, commentId) {
      if ($scope.loadCommentConn == "none") {
        $scope.loadCommentConn = "connecting";

        $http.get('{{apiServerUrl}}/board/free/comments/{{post.seq}}?commentId=' + commentId).then(function (response) {
          var data = response.data;

          $scope.commentCount = data.count;

          if (data.comments.length < 1) { // 댓글이 하나도 없을때
            if (type == "init") {
            } else {
              $scope.commentAlert.msg = '{{TRANSLATION "board.msg.there.is.no.new.comment"}}';
              $scope.commentAlert.classType = "bg-warning";
            }
          } else {	// 댓글을 1개 이상 가져왔을 때
            if (type == "init" || type == "btnRefreshComment") {
              $scope.comments = data.comments;
            } else if (type == "btnMoreComment" || type == "btnWriteComment") {
              $scope.comments = $scope.comments.concat(data.comments);
            }
          }

          $scope.loadCommentConn = "none";
        }, function () {
          $scope.loadCommentConn = "none";
        });
      }
    };

    // 댓글 더보기 단추.
    $scope.btnMoreComment = function () {
      if ($scope.comments.length > 0) {
        var lastComment = $scope.comments[$scope.comments.length - 1];
        $scope.loadComments("btnMoreComment", lastComment.id);
      } else {
        $scope.loadComments("btnMoreComment", "");
      }
    };

    // 댓글 새로고침 단추.
    $scope.btnRefreshComment = function () {
      $scope.commentAlert = {};
      $scope.comments = [];
      $scope.loadComments("btnRefreshComment", "");
    };

    // 댓글 감정 표현
    $scope.btnCommentFeeling = function (commentId, status) {
      var conn = $scope.commentFeelingConn[commentId];

      if (conn == "none" || conn == null) {
        $scope.commentFeelingConn[commentId] = "loading";

        $http.post('{{apiServerUrl}}/board/comment/' + commentId + '/' + status).then(function (response) {
          var data = response.data;

          if (data.feeling == 'LIKE') {
            $scope.numberOfCommentLike[commentId] = data.numberOfLike;
          } else if (data.feeling == 'DISLIKE') {
            $scope.numberOfCommentDislike[commentId] = data.numberOfDislike;
          }

          $scope.commentFeelingAlert[commentId] = '';
          $scope.commentFeelingConn[commentId] = "ok";

        }, function (response) {
          var data = response.data;
          $scope.commentFeelingConn[commentId] = "none";
          $scope.commentFeelingAlert[commentId] = data.message;
        });
      }
    };
  });

	$(document).ready(function () {
		App.init();

    // 사용할 앱의 Javascript 키를 설정해 주세요.
    Kakao.init('{{kakaoKey}}');

    var label = '{{post.subject}}\r{{TRANSLATION "board.name.free"}} · {{TRANSLATION "common.jakduk"}}';

    var kakaoLinkContent = {};
    kakaoLinkContent.container = '#kakao-link-btn';
    kakaoLinkContent.label = label;

    {{#if post.galleries}}
      kakaoLinkContent.image = {
        src: Jakduk.origin + '/gallery/{{post.galleries.[0].id}}',
        width: '300',
        height: '200'
      };
    {{/if}}

    kakaoLinkContent.webLink = {
      text: Jakduk.origin + '/board/free/{{post.seq}}',
      url: Jakduk.origin + '/board/free/{{post.seq}}'
    };

    // 카카오톡 링크 버튼을 생성합니다. 처음 한번만 호출하면 됩니다.
    Kakao.Link.createTalkLinkButton(kakaoLinkContent);
	});
</script>
