<div class="wrapper" ng-controller="statsCtrl">

  {{> navigation}}

  <!--=== Breadcrumbs ===-->
  <div class="breadcrumbs">
    <div class="container">
      <h1 class="pull-left">
        <a href="/stats/attendance/club" target="_self">{{TRANSLATION "stats.attendance"}}</a></h1>
      <ul class="pull-right breadcrumb">
        <li>
          <a href="/stats/attendance/league">{{TRANSLATION "stats.attendance.breadcrumbs.league"}}</a>
        </li>
        <li class="active">{{TRANSLATION "stats.attendance.breadcrumbs.club"}}</li>
        <li>
          <a href="/stats/attendance/season">{{TRANSLATION "stats.attendance.breadcrumbs.season"}}</a>
        </li>
      </ul>
    </div><!--/container-->
  </div><!--/breadcrumbs-->
  <!--=== End Breadcrumbs ===-->

  <!--=== Content Part ===-->
  <div class="container content">

    <div class="alert alert-info" ng-class="alert.classType" ng-show="alert.msg"><p ng-bind="alert.msg"></p></div>

    <h3 ng-hide="clubOrigin">{{TRANSLATION "stats.msg.choose.football.club"}}</h3>

    <div class="row">
      <div class="col-xs-8 col-sm-4 col-md-3">
        <select class="form-control" ng-model="footballClub" ng-options="opt.names[0].fullName for opt in footballClubs" ng-change="changeFootballClub()">
          <option value="">{{TRANSLATION "stats.select.football.club"}}</option>
        </select>
      </div>
    </div>

    <highchart id="chart1" config="chartConfig" class="margin-bottom-10" ng-show="clubOrigin"></highchart>

    <div class="tag-box tag-box-v4 margin-bottom-20" ng-show="clubOrigin">
      <h2 ng-bind="chartConfig.title.text"></h2>
      <p>{{{TRANSLATION "stats.msg.total.number.of.attendance.matches" n="<strong ng-bind=\"gamesSum | number:0\"></strong>"}}}</p>
      <p>{{{TRANSLATION "stats.msg.total.number.of.attendance.total" n="<strong ng-bind=\"totalSum | number:0\"></strong>"}}}</p>
      <p>{{{TRANSLATION "stats.msg.total.number.of.attendance.average" n="<strong ng-bind=\"average | number:0\"></strong>"}}}</p>
    </div>

    <div class="text-right">
      <button class="btn-u btn-brd rounded btn-u-xs" type="button" ng-click="btnUrlCopy()" tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "common.msg.copy.to.clipboard"}}">
        <i class="icon-link"></i>
      </button>
      <button id="kakao-link-btn" class="btn btn-link rounded" ng-click="sendLink()" tooltip-popup-close-delay='300' uib-tooltip="{{TRANSLATION "common.msg.send.to.kakao"}}">
        <img src="//dev.kakao.com/assets/img/about/logos/kakaolink/kakaolink_btn_small.png">
      </button>
    </div>
  </div>

  {{> footer}}

</div>
{{#CHUNK 'css'}}
  <link rel="stylesheet" href="/unify/assets/plugins/cube-portfolio/cubeportfolio/css/cubeportfolio.min.css">
  <link rel="stylesheet" href="/unify/assets/plugins/cube-portfolio/cubeportfolio/custom/custom-cubeportfolio.css">
{{/CHUNK}}
{{#CHUNK 'js'}}
  <script type="text/javascript">
    require([
      'angular', 'kakao', 'jakduk', 'angular-highcharts'
    ], function (angular, Kakao, Jakduk) {
      angular.module("jakdukApp", [
        "highcharts-ng", "ui.bootstrap", 'jakdukCommon'
      ]).controller('statsCtrl', ['$scope', '$http', '$window', function ($scope, $http, $window) {
        $scope.footballClubsConn = "none";
        $scope.attendancesConn = "none";
        $scope.attendances = {};
        $scope.footballClubs = [];
        $scope.alert = {};
        $scope.clubOrigin = "";
        $scope.totalSum = 0;
        $scope.gamesSum = 0;
        $scope.average = 0;
        $scope.clubOrigin = "{{clubOrigin}}";

        Highcharts.setOptions({
          lang: {
            thousandsSep: ','
          }
        });

        $scope.chartConfig = {
          options: {
            chart: {
              type: 'column',
              height: 500
            },
            tooltip: {
              shared: true
            }
          },
          title: {
            text: '{{TRANSLATION "stats.attendance.club.chart.title"}}'
          },
          subtitle: {
            text: 'Source: blog.daum.net/vhgksl'
          },
          xAxis: {
            type: 'category',
            labels: {
              style: {
                fontSize: '13px'
              }
            },
            crosshair: true
          },
          yAxis: [{ // Total yAxis
            min: 0,
            title: {
              text: '{{TRANSLATION "stats.attendance.total"}}',
              align: 'middle'
            },
            labels: {
              x: 0,
              formatter: function () {
                return Highcharts.numberFormat(this.value, 0);
              }
            }
          },
            { // Average yAxis
              labels: {
                x: 0,
                formatter: function () {
                  return Highcharts.numberFormat(this.value, 0);
                }
              },
              title: {
                text: '{{TRANSLATION "stats.attendance.average"}}'
              },
              opposite: true
            },
            { // Games yAxis
              labels: {
                x: 0,
                formatter: function () {
                  return Highcharts.numberFormat(this.value, 0);
                }
              },
              title: {
                text: '{{TRANSLATION "stats.attendance.matches"}}'
              },
              opposite: true
            }],
          series: [{
            name: '{{TRANSLATION "stats.attendance.total"}}',
            yAxis: 0,
            type: 'column',
            data: $scope.footballClubs,
            dataLabels: {
              enabled: true,
              color: '#FFFFFF',
              format: '{point.y:,.0f} {{TRANSLATION "stats.attendance.people"}}',
              style: {
                fontSize: '13px'
              }
            }
          },
            {
              name: '{{TRANSLATION "stats.attendance.average"}}',
              yAxis: 1,
              type: 'column',
              data: [],
              dataLabels: {
                enabled: true,
                color: '#FFFFFF',
                format: '{point.y:,.0f} {{TRANSLATION "stats.attendance.people"}}',
                style: {
                  fontSize: '13px'
                }
              }
            },
            {
              name: '{{TRANSLATION "stats.attendance.matches"}}',
              yAxis: 2,
              type: 'spline',
              data: [],
              dataLabels: {
                enabled: true,
                format: '{point.y:,.0f} {{TRANSLATION "stats.attendance.match"}}'
              }
            }],
          loading: true,
          credits: {enabled: true}
        };

        $scope.getFootballClubs = function (cb) {
          if ($scope.footballClubsConn === "none") {

            $scope.chartConfig.loading = true;
            $scope.footballClubsConn = "loading";

            $http.get('{{apiServerUrl}}/football/clubs?lang={{locale}}').then(function (response) {
              $scope.footballClubsConn = "none";
              $scope.footballClubs = $scope.footballClubs.concat(response.data);
              $scope.footballClubs.forEach(function (value, index) {
                if (value.origin.name === $scope.clubOrigin) {
                  $scope.footballClub = $scope.footballClubs[index];
                  $scope.chartConfig.title.text = $scope.footballClub.names[0].fullName + ' {{TRANSLATION "stats.attendance.club.title"}}';
                }
              });
            }, function () {
              $scope.footballClubsConn = "none";
              $scope.error = '{{TRANSLATION "common.msg.error.network.unstable"}}';
            });
          }
        };

        $scope.changeFootballClub = function () {
          if (!$scope.footballClub) {
            return;
          }

          $scope.clubOrigin = $scope.footballClub.origin.name;

          if (!$scope.attendances[$scope.clubOrigin]) {
            $scope.getAttendance();
          } else {
            $scope.refreshData();
          }
        };

        $scope.getAttendance = function () {
          if ($scope.attendancesConn == "none") {

            $scope.chartConfig.loading = true;
            $scope.attendancesConn = "loading";

            $http.get('{{apiServerUrl}}/stats/attendance/club/' + $scope.clubOrigin).then(function (response) {
              $scope.attendances[$scope.clubOrigin] = response.data;
              $scope.chartConfig.loading = false;
              $scope.attendancesConn = "none";
              $scope.refreshData();
            }, function (response) {
              var data = response.data;
              $scope.attendancesConn = "none";
              $scope.alert.msg = data.message;
              $scope.alert.classType = "alert-danger";
            });
          }
        };

        $scope.refreshData = function () {
          if (!$scope.clubOrigin) {
            return;
          }

          $scope.chartConfig.series.forEach(function (series) {
            series.data = [];
          });

          var attendances = $scope.attendances[$scope.clubOrigin];
          var totalSum = 0;
          var gamesSum = 0;

          if (attendances != null) {
            attendances.forEach(function (attendance) {
              var itemTotal = [attendance.season, attendance.total];
              var itemAverage = [attendance.season, attendance.average];
              var itemGames = [attendance.season, attendance.games];

              totalSum += attendance.total;
              gamesSum += attendance.games;

              $scope.chartConfig.series[0].data.push(itemTotal);
              $scope.chartConfig.series[1].data.push(itemAverage);
              $scope.chartConfig.series[2].data.push(itemGames);
            });
          }

          $scope.totalSum = totalSum;
          $scope.gamesSum = gamesSum;
          $scope.average = totalSum / gamesSum;

          $scope.chartConfig.title.text = $scope.footballClub.names[0].fullName + ' {{TRANSLATION "stats.attendance.club.title"}}';
        };

        $scope.btnUrlCopy = function () {
          var url = Jakduk.origin + '/stats/attendance/club?clubOrigin=' + $scope.clubOrigin;

          if ($window.clipboardData) {
            // IE처리
            // 클립보드에 문자열 복사
            $window.clipboardData.setData('text', url);

            // 클립보드의 내용 가져오기
            // window.clipboardData.getData('Text');

            // 클립보드의 내용 지우기
            // window.clipboardData.clearData("Text");
          } else {
            // 비IE 처리
            $window.prompt('{{TRANSLATION "common.msg.copy.to.clipboard"}}', url);
          }
        };

        $scope.sendLink = function () {
          var label = $scope.chartConfig.title.text + '\r{{TRANSLATION "stats"}} · {{TRANSLATION "common.jakduk"}}';
          var url = Jakduk.origin + '/stats/attendance/club?clubOrigin=' + $scope.clubOrigin;

          Kakao.Link.sendTalkLink({
            label: label,
            webLink: {
              text: url,
              url: url
            }
          });
        };

        $scope.getFootballClubs();

        if ($scope.clubOrigin) {
          $scope.getAttendance();
        }
      }]);

      angular.bootstrap(document, ['jakdukApp']);

      Kakao.init('{{kakaoClientID}}');
    });
  </script>
{{/CHUNK}}
