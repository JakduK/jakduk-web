<div class="wrapper" ng-controller="writeCtrl">
  <div class="container content">
    <div class="row">
      <div class="col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
        <div class="clearfix">
          <div class="dropdown pull-right">
            <button type="button" id="menus" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" class="btn btn-link dropdown-toggle">
              <i class="fa fa-globe"></i> {{TRANSLATION "common.language"}}
            </button>
            <ul aria-labelledby="menus" class="dropdown-menu">
              <li><a href="?lang=ko-KR">{{TRANSLATION "common.language.korean"}}</a></li>
              <li><a href="?lang=en-US">{{TRANSLATION "common.language.english"}}</a></li>
            </ul>
          </div>
        </div>

        <form name="userProfileForm" class="reg-page" ng-submit="onSubmit($event)">
          <div class="reg-header">
            <p>
              <a class="logo" href="/">
                {{#if (EQ locale 'ko-KR')}}
                  <img src="/assets/jakduk/img/logo_type_A_kr.png" alt="Logo" class="center-block">
                {{else}}
                  <img src="/assets/jakduk/img/logo_type_A_en.png" alt="Logo" class="center-block">
                {{/if}}
              </a>
            </p>
            <h2>{{TRANSLATION "user.profile.update"}}</h2>
          </div>

          {{#if userProfile.temporaryEmail}}
            <div class="alert alert-info">{{TRANSLATION 'common.please.register.your.email'}}</div>
          {{/if}}

          <div class="form-group">
            <div ng-repeat="item in uploader.queue" ng-show="uploader.isHTML5" ng-thumb="{ file: item._file, height: 100 }"></div>
            <label class="control-label">{{TRANSLATION "common.avatar"}}</label>
            <input type="file" nv-file-select="" uploader="uploader" accept="image/*">
          </div>

          <div class="form-group">
            <label class="control-label">{{TRANSLATION "user.email"}}</label>
            <input type="email" name="email" class="form-control" placeholder='{{TRANSLATION "user.placeholder.email"}}' ng-model="email" {{#unless userProfile.temporaryEmail}}disabled{{/unless}}>
          </div>

          <div class="form-group has-feedback"
               ng-class="{'has-success':userProfileForm.username.$valid, 'has-error':userProfileForm.username.$invalid || usernameStatus === 'INVALID'}">
            <label class="control-label">
              <abbr title="{{TRANSLATION "common.msg.required"}}">*</abbr> {{TRANSLATION "user.nickname"}}
            </label>
            <input type="text" name="username" class="form-control" placeholder="{{TRANSLATION "user.placeholder.username"}}" ng-model="username" ng-blur="onUsername()" ng-keyup="validationUsername()" ng-required="true" ng-minlength="usernameLengthMin" ng-maxlength="usernameLengthMax">

            <span class="glyphicon form-control-feedback" ng-class="{'glyphicon-ok':userProfileForm.username.$pristine || userProfileForm.username.$valid, 'glyphicon-remove':userProfileForm.username.$invalid || usernameStatus !== 'OK'}"></span>
            <i class="fa fa-spinner fa-spin" ng-show="usernameConn === 'connecting'"></i>
            <span ng-class="usernameAlert.classType" ng-show="usernameAlert.msg" ng-bind="usernameAlert.msg"></span>
          </div>

          <div class="form-group">
            <label class="control-label">
              {{TRANSLATION "user.support.football.club"}}
            </label>
            <select name="footballClub" class="form-control" ng-model="footballClub">
              <option value="">{{TRANSLATION "common.none"}}</option>
              {{#each footballClubs as |club|}}
                <option value="{{club.id}}"
                  {{#if (EQ club.names.[0].fullName ../userProfile.footballClubName.fullName)}} ng-init="footballClub = '{{club.id}}'"
                  {{/if}}>
                  {{club.names.[0].fullName}}
                </option>
              {{/each}}
            </select>
          </div>

          <div class="form-group">
            <label class="control-label">{{TRANSLATION "user.comment"}}</label>
            <textarea ng-model="about" name="about" class="form-control" cols="40" rows="3"></textarea>
          </div>

          <div class="form-group clearfix">
            <div ng-show="buttonAlert.msg" class="alert alert-info ng-cloak" style="display: none;">
              <i class="fa fa-circle-o-notch fa-spin" ng-show="submitConn == 'connecting'"></i>
              <span ng-class="buttonAlert.classType" ng-bind="buttonAlert.msg"></span>
            </div>
            <button type="submit" class="btn btn-default pull-right">
              <span class="glyphicon glyphicon-pencil"></span> {{TRANSLATION "common.save"}}
            </button>
            <button type="button" class="btn btn-default pull-right" onclick="window.history.back()">
              <span class="glyphicon glyphicon-chevron-left"></span> {{TRANSLATION "common.back"}}
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
{{#CHUNK 'css'}}
  <link rel="stylesheet" href="/assets/unify/assets/css/pages/page_log_reg_v1.css"/>
{{/CHUNK}}
{{#CHUNK 'js'}}
  <script type="text/javascript">
    require([
      'angular', 'jakduk', 'angular-file-upload'
    ], function (angular, Jakduk) {
      angular.module("jakdukApp", [
        'angularFileUpload',
        'jakdukCommon'
      ])
      .run(function () {
        angular.element('.ng-cloak').css('display', '');
      })
      .controller("writeCtrl", ['$scope', '$http', '$window', '$q', 'FileUploader', function ($scope, $http, $window, $q, FileUploader) {
        $window.onbeforeunload = function (e) {
          if ($scope.submitConn !== 'connecting' && !$scope.userProfileForm.$pristine) {
            (e || $window.event).returnValue = '{{TRANSLATION "common.msg.are.you.sure.leave.page"}}';
            return '{{TRANSLATION "common.msg.are.you.sure.leave.page"}}';
          }
        };

        var uploader = new FileUploader({
          url: '/api/user/picture'
        });

        uploader.onAfterAddingFile = function(fileItem) {
          if (uploader.queue.length > 1) {
            uploader.queue.splice(0, 1);
          }
        };

        $scope.uploader = uploader;

        $scope.usernameLengthMin = Jakduk.FormUsernameLengthMin;
        $scope.usernameLengthMax = Jakduk.FormUsernameLengthMax;

        $scope.username = '{{userProfile.username}}';
        $scope.email= '{{userProfile.email}}';
        $scope.about = '{{userProfile.about}}';

        $scope.usernameConn = "none";
        $scope.submitConn = "none";
        $scope.usernameAlert = {};
        $scope.buttonAlert = {};

        $scope.onSubmit = function (event) {
          if ($scope.userProfileForm.$valid &&
            ($scope.userProfileForm.username.$pristine || $scope.usernameStatus === "OK")
          ) {
            var deferred = $q.defer();

            $scope.submitConn = "connecting";
            $scope.buttonAlert = {
              classType: 'text-info',
              msg: '{{TRANSLATION "common.msg.be.communicating.server"}}'
            };


            if (uploader.queue.length) {
              uploader.uploadAll();
              uploader.onSuccessItem = function(fileItem, response, status) {
                deferred.resolve(status === 200 ? response.id : undefined);
              };
              uploader.onErrorItem = function() {
                window.alert('{{TRANSLATION "common.failed.upload.avatar"}}');
                deferred.resolve();
              };
            } else {
              deferred.resolve();
            }

            deferred.promise.then(function (pictureId) {
              $http.put('{{apiServerUrl}}/user/profile/me', {
                about: $scope.about,
                email: $scope.email,
                footballClub: $scope.footballClub,
                username: $scope.username,
                userPictureId: pictureId
              }).then(function () {
                $window.history.back();
              }, function (response) {
                $scope.submitConn = 'none';
                $scope.buttonAlert = {
                  classType: 'text-info',
                  msg: response.data.message
                };
              });
            });

          } else {
            if ($scope.userProfileForm.username.$invalid) {
              $scope.validationUsername();
            }
            $scope.submitConn = 'none';
            $scope.buttonAlert = {
              classType: 'text-info',
              msg: '{{TRANSLATION "common.msg.need.form.validation"}}'
            };
            event.preventDefault();
          }
        };

        $scope.onUsername = function () {
          if ($scope.userProfileForm.username.$valid) {
            if ($scope.usernameConn === "none") {
              $scope.usernameConn = "connecting";
              $http.get('{{apiServerUrl}}/user/exist/username/edit?username=' + encodeURIComponent($scope.username)).then(function () {
                $scope.usernameStatus = 'OK';
                $scope.usernameAlert = {
                  classType: "text-success",
                  msg: '{{TRANSLATION "user.msg.available.data"}}'
                };
              }, function () {
                $scope.usernameStatus = 'INVALID';
                $scope.usernameAlert = {
                  classType: "text-danger",
                  msg: '{{TRANSLATION "user.msg.already.username"}}'
                };
              }).then(function () {
                $scope.usernameConn = "none";
              });
            }
          } else {
            $scope.usernameStatus = 'INVALID';
            $scope.validationUsername();
          }
        };

        $scope.validationUsername = function () {
          if ($scope.userProfileForm.username.$invalid) {
            if ($scope.userProfileForm.username.$error.required) {
              $scope.usernameAlert = {
                classType: "text-danger",
                msg: '{{TRANSLATION "common.msg.required"}}'
              };
            } else if ($scope.userProfileForm.username.$error.minlength || $scope.userProfileForm.username.$error.maxlength) {
              $scope.usernameAlert = {
                classType: "text-danger",
                msg: '{{TRANSLATION "Size.userWrite.username"}}'
              };
            }
          } else {
            $scope.usernameAlert = {
              classType: "text-info",
              msg: '{{TRANSLATION "common.msg.error.should.check.redundancy"}}'
            };
          }
        };

      }]);

      angular.bootstrap(document, ['jakdukApp']);
    });
  </script>
{{/CHUNK}}
